// ПАРАМЕТРЫ Уже правильные
// ПарамДатаЗапроса = МоментВремени
// ПарамПродукт = ТекСтрокаТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыПродукт    
// С правильным учетом Движения со средней ценой


Процедура ОбработкаПроведения(Отказ, Режим) 
    //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокПотреблениеТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыПродукт КАК РекТабчДокПотреблениеПродуктыПродукт,
		|	СУММА(ДокПотреблениеТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыКоличество) КАК РекТабчДокПотреблениеПродуктыКоличество
		|ИЗ
		|	Документ.ДокПотребление.ТабчДокПотреблениеПродукты КАК ДокПотреблениеТабчДокПотреблениеПродукты
		|ГДЕ
		|	ДокПотреблениеТабчДокПотреблениеПродукты.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокПотреблениеТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыПродукт";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗапросаПотребление = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаЗапросаПотребление.Следующий() Цикл
		// Вставить обработку выборки ВыборкаЗапросаПотребление
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	// регистр РегОстаткиПродуктов Расход
	Движения.РегОстаткиПродуктов.Записывать = Истина;
	Для Каждого ТекСтрокаТабчДокПотреблениеПродукты Из ТабчДокПотреблениеПродукты Цикл        
	
	// обнуляем среднюю цену
	СредняяЦена = 0; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегОстаткиПродуктовОстатки.ИзмРегОстаткиПродуктовПродукт КАК РекЗапрПродукт,
		|	РегОстаткиПродуктовОстатки.РесРегОстаткиПродуктовКоличествоОстаток КАК РекЗапрКоличествоОстаток,
		|	РегОстаткиПродуктовОстатки.РесРегОстаткиПродуктовСуммаОстаток КАК РекЗапрСуммаОстаток
		|ИЗ
		|	РегистрНакопления.РегОстаткиПродуктов.Остатки(&ПарамДатаЗапроса, ИзмРегОстаткиПродуктовПродукт = &ПарамПродукт) КАК РегОстаткиПродуктовОстатки";
	
	Запрос.УстановитьПараметр("ПарамДатаЗапроса", МоментВремени());
	Запрос.УстановитьПараметр("ПарамПродукт", ТекСтрокаТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыПродукт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл      
		// получаем среднюю цену только если количество НЕ НОЛЬ (а сумма тогда зависшая)     
		Если ВыборкаДетальныеЗаписи.РекЗапрКоличествоОстаток > 0 Тогда 
			СредняяЦена = ВыборкаДетальныеЗаписи.РекЗапрСуммаОстаток / ВыборкаДетальныеЗаписи.РекЗапрКоличествоОстаток;    
		КонецЕсли;
		Сообщить(СредняяЦена);
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
			
		Движение = Движения.РегОстаткиПродуктов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.ИзмРегОстаткиПродуктовПродукт = ТекСтрокаТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыПродукт;
		Движение.РесРегОстаткиПродуктовКоличество = ТекСтрокаТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыКоличество;    
		// используем среднюю цену
		Движение.РесРегОстаткиПродуктовСумма = ТекСтрокаТабчДокПотреблениеПродукты.РекТабчДокПотреблениеПродуктыКоличество * СредняяЦена;
	КонецЦикла;   
	
КонецПроцедуры

<HTML><HEAD>
<META http-equiv=Content-Type content="text/html; charset=utf-8"><LINK href="v8help://service_book/service_style" type=text/css rel=stylesheet>
<META content="MSHTML 6.00.2900.3492" name=GENERATOR></HEAD>
<BODY>
<H1 class="">Основные понятия XBASE</H1>
<BLOCKQUOTE dir=ltr style="MARGIN-RIGHT: 0px">
<P class=""><A href="#Common">Общее</A><BR><A href="#FieldsRecords">Поля и записи</A><BR><A href="#Table">Таблица, структура таблицы, файл базы данных</A><BR><A href="#Index">Индексы, выражения индекса и фильтра, индексный файл</A><BR><A href="#SaveChangeToIB">Запись изменений в базу данных</A><BR><A href="#WorkWithIndexFile">Работа с индексными файлами</A><BR><A href="#Delete">Удаление записей</A><BR><A href="#Create">Создание базы данных, индекса, индексного файла</A><BR><A href="#constraint">Ограничения</A></P></BLOCKQUOTE>
<P class=""><A name="">Для облегчения</A> понимания материала данного раздела читателем, не имеющим опыта работы с базами данных, ниже приводятся пояснения терминов, использованных при описании средства встроенного языка для работы с базами данных – объекта XBase.</P>
<H2 class=""><A name=FieldsRecords>Поля и записи</A></H2>
<P class="">Если Вы не знакомы с концепцией базы данных, то ее можно себе представить в виде упорядоченного хранилища информации типа картотеки. Хорошим примером базы данных может служить телефонный справочник организации. Он содержит фамилии, номера телефонов и номера комнат всех сотрудников организации. Каждая строка справочника соответствует одной записи, а каждая колонка – полю. Каждое поле имеет наименование и характеристики информации, для хранения которой оно предназначено: тип, длина, точность. Содержимое поля для конкретной записи называется значением поля. Например, телефонный справочник, может быть организован в виде таблицы с колонками (полями) "Фамилия Имя Отчество", "№ комнаты", "Телефон", каждая строка (запись) содержит информацию об одном абоненте.</P>
<H2 class=""><A name=Table>Таблица, структура таблицы, файл базы данных</A></H2>
<P class="">Весь справочник целиком в терминах баз данных называется таблицей. Состав входящих в таблицу полей определяет структуру таблицы, а состав входящих в таблицу записей – ее содержание. Каждая запись в таблице состоит из того же набора полей, что и таблица целиком, поэтому иногда употребляется термин структура записи. Это понятие адекватно структуре таблицы, хотя употребление первого термина представляется более корректным, т.к. таблица имеет структуру независимо от того, имеется ли в ней хотя бы одна запись.</P>
<P class="">Реализация баз данных формата DBF подразумевает, что каждая таблица хранится в отдельном файле. Поэтому в дальнейшем мы будем применять термин "файл базы данных" или "файл БД", имея в виду таблицу&nbsp; базы данных.</P>
<H2 class=""><A name=Index>Индексы, выражения индекса и фильтра, индексный файл</A></H2>
<P class="">Для организации упорядочивания содержимого файла БД и поиска в ней по значению одного или нескольких полей применяется механизм индексов. Его применение можно сравнить с сортировкой картотеки по определенному признаку (совокупности признаков). Однако, в отличие от картотеки, файл БД может иметь сразу несколько индексов, и, соответственно, являться упорядоченным одновременно по нескольким признакам. Каждый индекс имеет наименование, признак уникальности, выражение индекса и фильтр. Наименование индекса используется для идентификации индекса. Выражение индекса и фильтр представляют собой написанные на специальном языке выражения, вычисление значения которых для каждой записи позволяет определить ее место при упорядочивании и необходимость помещения ее в упорядоченный список (индекс может содержать упоминание не обо всех записях таблицы, а только об удовлетворяющих выражению фильтра). Уникальный индекс (имеющий установленным признак уникальности) позволяет иметь в индексе ссылки на записи только с различным значением индексного выражения.</P>
<P class="">Индексы хранятся в индексном файле. Индексный файл может содержать информацию более чем об одном индексе.</P>
<H2 class=""><A name=SaveChangeToIB>Запись изменений в базу данных</A></H2>
<P class="">Каждый объект представляет собой структуру данных, расположенных в памяти компьютера и изменение содержимого его свойств не вызывает немедленного изменения в файлах базы данных. При включенном режиме автосохранения запись содержимого объекта в файлы БД происходит при изменении позиционирования (переход с следующей записи, поиск по ключу и т.д.), при выключенном режиме автосохранения запись изменений происходит только при вызове соответствующего метода объекта.</P>
<H2 class=""><A name=WorkWithIndexFile>Работа с индексными файлами</A></H2>
<P class="">Следует иметь в виду, что одновременно XBase-объект может быть связан не более, чем с одним индексным файлом. Все изменения в базе данных, сделанные в сеансе работы с одним индексным файлом, никак не отражаются на остальных. Поэтому не рекомендуется иметь более одного индексного файла для БД. В противном случае, после каждого открытия БД с индексным файлом, отличным от открытого в предыдущем сеансе работы с базой, следует производить переиндексацию (обновление содержимого индексного файла).</P>
<H2 class=""><A name=Delete>Удаление записей</A></H2>
<P class="">Удаление записи из базы данных не приводит к физическому уничтожению ее на диске. В этом случае в специальном служебном поле записи, не доступном обычными средствами, ставится пометка об удалении. На записи, помеченные удаленными, позиционирования не происходит, если не включен специальный режим просмотра удаленных записей. Имеется свойство, управляющее специальным режимом просмотра, а также набор методов для определения, является ли спозиционированная запись удаленной, и восстановления удаленной записи.</P>
<P class="">Метод сжатия базы вызывает физическое уничтожение записей, помеченных как удаленные. Метод очистки базы вызывает физическое уничтожение всех записей. После применения этих методов восстановление удаленных записей становится невозможным.</P>
<H2 class=""><A name=Create>Создание базы данных, индекса, индексного файла</A></H2>
<P class="">Помимо работы с существующими базами данных, объект XBase имеет набор методов, позволяющих создать новую базу данных произвольной структуры, новые индексы и новый индексный файл. Следует отметить, что, если использование методов, изменяющих структуру БД, возможно только для объектов, не связанных с существующей базой данных (т.е. для вновь создаваемых БД), то создание новых индексов и индексного файла возможно как для создаваемых БД, так и для уже существующих и открытых.</P>
<H2 class=""><A name=constraint>Ограничения</A></H2>
<P class="">Основное назначение объектов XBase – организация экспорта-импорта информации в/из внешних файлов формата DBF.</P>
<P class="">Объекты XBase не поддерживают поля типа memo.</P>
<P class="">Объекты XBase поддерживают только монопольный доступ к файлам.</P>
<P class="">XBase-объекты поддерживают индексные файлы в формате CDX. Однако, использование внешними программами (например, FoxBase) индексных файлов, созданных с помощью объектов XBase, так же, как и использование объектами индексных файлов, созданных внешними программами, не рекомендуется из-за возможной несовместимости версий.</P></BODY></HTML>
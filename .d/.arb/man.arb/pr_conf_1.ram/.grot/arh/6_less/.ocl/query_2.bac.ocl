
Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПокупкаПродукты.Продукт КАК Продукт,
		|	СУММА(ПокупкаПродукты.Количество) КАК Количество,
		|	СУММА(ПокупкаПродукты.Количество * ПокупкаПродукты.Цена) КАК Сумма
		|ИЗ
		|	Документ.Покупка.Продукты КАК ПокупкаПродукты
		|ГДЕ
		|	ПокупкаПродукты.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПокупкаПродукты.Продукт";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Продукты Приход
	Движения.Продукты.Записывать = Истина;
	Для Каждого ТекСтрокаПродукты Из Продукты Цикл
		Движение = Движения.Продукты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Продукт = ТекСтрокаПродукты.Продукт;
		Движение.Количество = ТекСтрокаПродукты.Количество;
	КонецЦикла; 
	
	Если Продукты.Количество() = 0 Тогда  
		Сообщить("у документа нет строк");//Показать ошибку
		Отказ = Истина;
    КонецЕсли;
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
